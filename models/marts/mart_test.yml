version: 2

models:
  - name: fct_customer_orders_new
    columns:
      - name: order_id
        tests:
          - unique
          - not_null
      - name: customer_id
        tests:
          - relationships:
              to: ref('dim_customers')
              field: customer_id
        
  - name: fct_customer_orders
    columns:
      - name: order_id
        tests:
          - unique
          - not_null
      - name: customer_id
        tests:
          - relationships:
              to: ref('dim_customers')
              field: customer_id
      # - name: payment_status
      #   tests:
      #     - unique

  - name: fct_orders
    columns:
      - name: amount
        tests:
          - average_dollars_spent_greater_than_one:
              group_by_column: customer_id

          - dbt_expectations.expect_column_values_to_be_between: 
          # this will perform what the dbt_utils.expression-is-true test does!
              min_value: 0
              row_condition: "order_id is not null" 
              strictly: false
          - dbt_expectations.expect_column_mean_to_be_between: 
          # this will perform what our singular and generic tests do!
              min_value: 1
              group_by: [customer_id] 
              row_condition: "order_id is not null" # (Optional)
              strictly: false
          
  - name: dim_customers
    columns:
      - name: customer_id
        tests:
          - unique
          - not_null
          - dbt_utils.cardinality_equality: # dbt_utils custom tests
              field: customer_id
              to: ref('stg_jaffle_shop__customers')
          

          